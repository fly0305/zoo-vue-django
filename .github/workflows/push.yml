name: Commit
on: push

jobs:
  container:
    name: Container image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: GitHub Package Registry
        uses: aevea/action-kaniko@master
        with:
          registry: docker.pkg.github.com
          password: ${{ secrets.GITHUB_TOKEN }}
          image: server
          cache: true
          cache_registry: cache
          tag: ${{ github.sha }}

      - name: Dockerhub
        uses: aevea/action-kaniko@master
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          image: kiwicom/the-zoo
          cache: true
          cache_registry: kiwicom/cache
          tag: ${{ github.sha }}

  black:
    name: Code style
    runs-on: ubuntu-latest
    container:
      image: kiwicom/black:20.8b1
      options: -u root

    steps:
      - uses: actions/checkout@v2

      - name: Run black
        run: black --check . --diff

  commitsar:
    name: Commit message style
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Run commitsar
        uses: docker://aevea/commitsar

  pre-commit:
    name: Static checks
    runs-on: ubuntu-latest
    container: kiwicom/pre-commit:2.6.0-full

    steps:
      - uses: actions/checkout@v2

      - run: apk add --no-cache tar

      - name: Cache
        uses: actions/cache@v2
        with:
          path: .pre-commit-cache
          key: static-checks-${{ hashFiles('.pre-commit-config.yaml') }}

      - run: mkdir -p .pre-commit-cache
      - run: pre-commit install --install-hooks
      - run: pre-commit run -a
        env:
          SKIP: no-commit-to-branch

  pylint:
    name: Pylint
    runs-on: ubuntu-latest
    container:
      image: kiwicom/tox:3.19
      options: -u root

    steps:
      - uses: actions/checkout@v2

      - run: apk add --no-cache tar

      - name: Cache
        uses: actions/cache@v2
        with:
          path: .tox
          key: pylint-${{ hashFiles('requirements/*.txt', 'tox.ini') }}

      - run: tox -e pylint

  pytest:
    name: Pytest
    runs-on: ubuntu-latest
    container:
      image: kiwicom/tox:3.19
      options: -u root

    env:
      TEST_DATABASE_URL: postgres://postgres:postgres@postgres/postgres
      TOX_TESTENV_PASSENV: TEST_DATABASE_URL
      MEILI_HOST: http://meilisearch:7700
      MEILI_MASTER_KEY: meili

    services:
      meilisearch:
        image: getmeili/meilisearch
        env:
          MEILI_MASTER_KEY: meili
          MEILI_NO_ANALYTICS: true
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - run: apk add --no-cache tar

      - name: Cache
        uses: actions/cache@v2
        with:
          path: .tox
          key: pytest-${{ hashFiles('requirements/*.txt', 'tox.ini') }}

      - run: adduser -D postgres
      - run: su -l postgres
      - run: mkdir -p reports
      - run: >
          tox -e tests
          --
          --cov-branch
          --junitxml=reports/xunit.xml
          --cov-report xml:reports/coverage.xml

      - uses: actions/upload-artifact@v2
        with:
          name: reports
          path: reports

  migrations:
    name: Migrations
    runs-on: ubuntu-latest
    needs: container

    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --hostname postgres

    steps:
      - uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - run: >
          docker run
          --network ${{ job.services.postgres.network }}
          docker.pkg.github.com/kiwicom/the-zoo/server:$GITHUB_SHA
          django-admin makemigrations --check

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: pytest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v2
        with:
          name: reports
          path: reports

      - name: Fix code coverage paths
        run: sed -i "s|/__w/the-zoo/the-zoo|/github/workspace|g" reports/coverage.xml

      - run: cat reports/coverage.xml

      - name: Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
