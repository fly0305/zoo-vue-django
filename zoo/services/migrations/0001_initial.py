# Generated by Django 2.0b1 on 2017-10-30 13:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="DataCenter",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("provider", models.CharField(max_length=100)),
                ("region", models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Repository",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("owner", models.CharField(max_length=100)),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("owner", models.CharField(max_length=100)),
                ("name", models.CharField(max_length=100)),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("beta", "beta"),
                            ("production", "production"),
                            ("deprecated", "deprecated"),
                            ("discontinued", "discontinued"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "impact",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("profit", "profit"),
                            ("customers", "customers"),
                            ("employees", "employees"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "slack_channel",
                    models.CharField(blank=True, max_length=22, null=True),
                ),
                (
                    "pagerduty_url",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "dashboard_url",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("docs_url", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "datacenter",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="services.DataCenter",
                    ),
                ),
                (
                    "repository",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="services.Repository",
                    ),
                ),
            ],
        ),
        migrations.AlterUniqueTogether(
            name="repository", unique_together={("owner", "name")}
        ),
        migrations.AlterUniqueTogether(
            name="datacenter", unique_together={("provider", "region")}
        ),
        migrations.AlterUniqueTogether(
            name="service", unique_together={("owner", "name")}
        ),
    ]
